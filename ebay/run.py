import sys

try:
    from ebay.utils.data import *
except ImportError:
    from .ebay.utils.data import *


def run(name='listing_redis_spider'):
    from scrapy.crawler import CrawlerProcess
    from scrapy.utils.project import get_project_settings

    process = CrawlerProcess(get_project_settings())

    process.crawl(name)
    process.start()


def init():
    is_testing = True
    delete_redis_key([
        'ebay:item_ids_filter_hyper',
        'ebay:item_ids_filter',
        'ebay:item_ids',

        'ebay:shop:basic',
        'ebay:shop:count',
        'ebay:shop:has_sold_count',
        'ebay:shop:total_sold',
        'ebay:shop:amount',
        'ebay:shop:week_sold',
        'ebay:shop:last_week_sold',

        'ebay:category_ids',
        'ebay:category_urls',
    ])
    if is_testing:
        # 测试
        # read_item_ids_from_file()
        # copy_item_ids()
        insert_category_id([
            179457, 37802, 15274, 172024, 45002, 165437, 122962, 20690, 44999, 46305, 181415, 33721, 58730, 181962,
            181114, 183125, 182173, 182178, 3768, 102953, 3422, 20654, 177816, 20605, 11873, 33164, 50914, 58540, 43504,
            43304, 20349, 36865, 107876, 74941, 123422, 33919, 57990, 15687, 43506, 20594, 175643, 177652, 183169,
            181887, 58166, 177754, 51027, 42132, 94940, 82597, 36024, 177664, 31510, 116724, 11511, 20518, 4660, 57520,
            44932, 15709, 80546, 86207, 52762, 80913, 102411, 78089, 50647, 178893, 123417, 182213, 14990, 2996, 1060,
            31387, 177760, 64035, 56172, 179273, 146290, 180962, 35190, 112529, 166725, 61779, 1082, 11484, 2993, 57989,
            50602, 146545, 11522, 11530, 3199, 116022, 181909, 20706, 176973, 33161, 20659, 163583, 45220, 163560,
            26420, 14295, 20163, 139973, 1524, 13866, 155101, 37822, 27386, 180040, 146531, 63855, 181708, 183545,
            63852, 48618, 50637, 20485, 26388, 11667, 179811, 175636, 6755, 177741, 546, 118261, 257, 16494, 71378,
            26388, 9745, 51071, 100345, 11843, 50677, 177, 86174, 102430, 33649, 52365, 45230, 170103, 50431, 33657,
            165560, 56092, 36449, 11837, 3820, 62134, 20593, 112581, 46782, 150059, 79759, 954, 36589, 38229, 162, 7279,
            113337, 428, 20509, 28162, 45515, 15662, 14014, 58543, 166030, 132297, 20357, 88468, 20373, 146504, 80077,
            43307, 96991, 48571, 68030, 48677, 42425, 182094, 31492, 67858, 51169, 58300, 31493, 182095, 182096, 158840,
            20311, 116848, 182097, 3668, 42428, 182073, 182098, 1500, 146492, 80087, 38331, 3286, 182064, 9394, 9355,
            40054, 4669, 4670, 149987, 296, 183502, 183503, 40979, 20381, 182069, 182067, 182065, 182066, 182068, 63869,
            15775, 63866, 155226, 11567, 63865, 11556, 11553, 63863, 11554, 1264, 1064, 4844, 63867, 314, 57991, 15691,
            3002, 3001, 15689, 11483, 313, 91304, 53557, 3035, 53566, 108910, 3036, 53552, 38398, 53114, 11502, 53126,
            96794, 15710, 95535, 15729, 95572, 95528, 95571, 45258, 45260, 38436, 52358, 52362, 15660, 3007, 11526,
            45232, 45222, 45237, 15736, 45212, 1063, 86645, 15663, 15666, 52373, 2998, 11451, 315, 1070, 3075, 11467,
            149399, 3259, 155197, 64355, 20369, 20365, 43310, 20366, 42409, 3281, 3311, 3313, 3317, 14970, 14980, 15037,
            15054, 15055, 15056, 15077, 15941, 20367, 22610, 32863, 32865, 40981, 43308, 61395, 73839, 86541, 108663,
            146432, 146483, 146511, 154787, 154788, 154892, 164, 172, 174, 1244, 1498, 1499, 2544, 3292, 3716, 11173,
            14957, 15088, 16178, 18792, 23160, 26266, 32834, 39975, 41911, 44908, 44957, 48603, 48605, 56084, 64459,
            70814, 74935, 80138, 99247, 114205, 116238, 116240, 116259, 116262, 116265, 140067, 140070, 140072, 140073,
            140074, 140076, 140080, 140082, 140083, 140085, 154789, 178, 182, 184, 186, 189, 193, 1246, 3303, 3322,
            3347, 3701, 3702, 3704, 3706, 3751, 3761, 4616, 4706, 11153, 11169, 11182, 11229, 15202, 15215, 15303,
            15388, 16164, 16168, 18866, 18868, 29982, 29997, 30066, 38612, 43443, 43447, 44996, 48515, 50518, 56100,
            64345, 74944, 97004, 97006, 97016, 109080, 116309, 154786, 178, 182, 184, 186, 189, 193, 1246, 3303, 3322,
            3347, 3701, 3702, 3704, 3706, 3751, 3761, 4616, 4706, 11153, 11169, 11182, 11229, 15202, 15215, 15303,
            15388, 16164, 16168, 18866, 18868, 29982, 29997, 30066, 38612, 43443, 43447, 44996, 48515, 50518, 56100,
            64345, 74944, 97004, 97006, 97016, 109080, 116309, 154786, 15221, 29953, 3844, 11019, 43021, 43022, 43154,
            92279, 15131, 30077, 43166, 92706, 43171, 146724, 26277, 43432, 119080, 125743, 43196, 86077, 50494, 146552,
            706, 707, 11086, 43343, 85842, 85843, 64342, 116184, 96993, 15073, 146657, 30052, 23781, 23780, 10980,
            10988, 10990, 10993, 146547, 146548, 146549, 92278, 146551, 11000, 146550, 43125, 92283, 3325, 3839, 11008,
            147587, 147588, 147589, 147590, 147591, 147592, 147593, 147594, 147595, 147596, 11021, 398, 147597, 147598,
            147599, 147600, 147601, 19219, 147603, 147604, 147605, 147606, 147607, 288, 146722, 119076, 146725, 119079,
            10363, 11313, 69427, 19251, 125754, 12603, 90811, 91471, 62292, 62293, 5204, 62296, 10331, 3810, 11120,
            10354, 85877, 10231, 146554, 146555, 147584, 147585, 19224, 147609, 147610, 147611, 147612, 147613, 147614,
            147615, 147616, 147617, 19234, 147619, 147620, 19237, 147621, 106919, 147622, 147623, 147624, 1195, 70955,
            2605, 147625, 147626, 147627, 147628, 147629, 38323, 147630, 147631, 147632, 147633, 147639, 147640, 147641,
            147642, 2622, 36553, 48975, 16464, 7119, 4696, 230, 36586, 12523, 50284, 147582, 147583, 16513, 36490, 1042,
            95254, 2587, 2588, 45352, 2476, 2480, 2481, 147635, 147636, 147637, 147643, 147645, 147646, 147647, 147649,
            147650, 147651, 147652, 147653, 147654, 147655, 147656, 147657, 147658, 147659, 147661, 16462, 147662,
            147663, 147664, 147665, 147666, 147667, 147668, 147669, 147671, 147672, 147673, 147674, 147675, 348, 19033,
            223, 36546, 747, 749, 38261, 2563, 20612, 79621, 2564, 2565, 79624, 43526, 1041, 35987, 20634, 11803,
            105116, 30, 31395, 1189, 31397, 132774, 106027, 148142, 148143, 148144, 148145, 148146, 77231, 68660,
            141617, 122932, 67124, 19002, 93630, 20678, 81232, 38232, 20572, 147677, 147678, 147679, 19168, 147680,
            147681, 147682, 147683, 147685, 147686, 147687, 113897, 16115, 147579, 147580, 94593, 20741, 122759, 20743,
            20745, 94599, 57223, 142859, 94477, 33166, 142349, 75664, 94609, 38162, 94483, 114961, 142350, 142861,
            142863, 142351, 142352, 36013, 36015, 94512, 90545, 10034, 1209, 94778, 11321, 63293, 63294, 117440, 68674,
            40138, 20426, 94541, 20685, 94543, 63310, 4305, 94546, 141661, 32866, 32870, 25450, 15470, 3569, 8438,
            18808, 94586, 2307, 2310, 142854, 142865, 142354, 142355, 142867, 142357, 142358, 142871, 142360, 142869,
            142870, 142363, 142364, 142361, 142366, 142367, 2296, 20385, 1057, 1058, 11047, 142505, 142506, 142507,
            142508, 142509, 142510, 142511, 91775, 41521, 91828, 23865, 70467, 70472, 70474, 142538, 98893, 38626,
            28004, 2290, 4596, 142453, 2294, 142454, 91768, 142452, 2299, 2303, 1537, 106887, 142856, 2312, 142857,
            98187, 1420, 138, 39565, 39568, 404, 13592, 1051, 1573, 13605, 38, 8614, 806, 1579, 13611, 3628, 14000,
            3893, 952, 1345, 105294, 208, 595, 1370, 3546, 38108, 13660, 20190, 1375, 146656, 13666, 13667, 13669,
            29931, 363, 621, 11117, 623, 20080, 624, 11119, 107, 7275, 1525, 118, 261, 4742, 264, 4747, 3468, 62479,
            4368, 4369, 532, 65176, 75161, 2970, 70943, 2976, 3487, 16037, 4135, 44840, 79787, 148147, 692, 693, 36277,
            1339, 91579, 700, 44861, 703, 31686, 1607, 47176, 201, 21195, 36303, 60241, 45137, 21208, 219, 2914, 146660,
            63333, 2917, 70375, 3432, 2023, 630, 146557, 146558, 20863
        ])
    else:
        # 生产
        insert_category_ids('redis')
    reset_token()
    print('Init Done.')


def run_multi(name, processes=8, prepared=0):
    from multiprocessing import Pool
    p = Pool(processes)
    if prepared:
        for i in range(prepared):
            p.apply_async(run, args=('listing_xml_redis_spider',))
    for i in range(processes - prepared):
        p.apply_async(run, args=(name,))
    p.close()
    p.join()


def main():
    args = dict(enumerate(sys.argv))
    print(args)

    type = args.get(1, 'master')
    processes = int(args.get(2, 128))
    prepared = int(args.get(3, 8))
    print(type, processes, prepared)

    if type == 'master':
        init()
    run_multi('detail_xml_redis_spider', processes, prepared)


if __name__ == '__main__':
    main()
    # init()
    # run_multi('detail_xml_redis_spider', 128, 8)
